buildscript {
    ext {
        gradleVersion = '4.9'
        springBootVersion = '1.5.14.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/libs-snapshot" }
        maven { url "https://repo.spring.io/plugins-release"}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

sourceCompatibility = 1.7
targetCompatibility = 1.7

ext {
    springBootCfServiceBrokerVersion = "2.5.0"
    springBootVersion = '1.5.14.RELEASE'
    baseName = 'openpaas-service-java-broker-mongodb'
    version =  '2.5'
  
    hibernateValidatorVersion = '5.1.0.Final'
    jsonPathVersion = '0.9.1'
    jacocoVersion = '0.8.4'
}

jar {
    archiveName = 'ap-mongodb-broker.jar'
    
}

processResources {

	if (project.hasProperty('jarType')) {
		if (project.jarType == 'openpaas_bosh') {
			exclude 'application-mvc.properties'
			exclude 'datasource.properties'
			exclude 'logback.xml'
		}
	}
	
}

repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/libs-snapshot" }
}

configurations {
    providedRuntime
}

dependencies {
    
    compile files('libs/ap-service-broker-1.0.0.1.jar')
    
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    
	//testCompile("org.cloudfoundry:spring-boot-cf-service-broker-tests:${springBootCfServiceBrokerVersion}")
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("com.jayway.jsonpath:json-path:${jsonPathVersion}")
    testCompile("org.apache.httpcomponents:httpclient:4.4.1")
    
	compile("org.apache.commons:commons-dbcp2")
    
    compile("org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}")
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = "${jacocoVersion}"
}

test {
    ignoreFailures=true
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacoco-overall.exec")
    }
}